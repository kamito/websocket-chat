#!/usr/bin/env ruby
# -*- coding: utf-8; mode: ruby -*-

# サーバー
## Settings
#--------------------
# HOST
HOST = "0.0.0.0"
# PORT
PORT = 51234
#--------------------


require 'em-websocket'
require 'fileutils'

CURRENT_DIR = File.expand_path(File.join(File.dirname(__FILE__)))
LOGDIR = File.join(CURRENT_DIR, 'logs')
PIDDILE = File.join(CURRENT_DIR, 'server.pid')

FileUtils.makedirs(LOGDIR) unless File.exists?(LOGDIR)

if ARGV[0] == "-D"
  Process.daemon(nochdir=true)
  File.open(PIDDILE, "w") do |io|
    io.write(Process.pid)
  end
end

connections = Hash.new
now = Time.now
logpath = File.join(LOGDIR, "#{now.strftime('%Y%m%d%H%M%S')}.#{now.usec}.log")

options = {
  :host => HOST,
  :port => PORT,
}


class Server
  extend EventMachine::WebSocket

  def self.start(options, &blk)
    EM.epoll
    EM.run do

      trap("TERM") { stop }
      trap("INT")  { stop }

      EventMachine::start_server(options[:host], options[:port],
                                 EventMachine::WebSocket::Connection, options) do |c|
        blk.call(c)
      end
    end
  end

  def self.stop
    if File.exists?(PIDDILE)
      pid = File.read(PIDDILE).to_i
      Process.kill('KILL', pid)
    else
      puts ""
      puts "Terminating WebSocket Server"
      EventMachine.stop
    end
  end
end

Server.start(options) do |ws|
  username = nil

  ws.onopen do
    ws.send "Connected session."
  end

  ws.onmessage do |msg|
    m = msg.match(/^@username:\s([a-zA-Z0-9]+)$/)
    if m
      username = m[1]
      connections[username] = ws unless connections.key?(username)
      msg = "Loggedin #{username}"
    else
      now = Time.now.strftime("%H:%M:%S")
      msg = "[#{now}] #{username.ljust(10)}: #{msg}"
    end
    puts "#{msg}"
    File.open(logpath, 'a') do |io|
      io << "#{msg}\n"
    end

    ws.send(msg) #to myself
    connections.each do |username, con|
      #to other people
      con.send(msg) unless con == ws
    end
  end

  ws.onclose do
    puts "Closed session."
  end
end
